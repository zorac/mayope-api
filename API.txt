RAW TYPE Boolean
A boolean value - true/false.

RAW TYPE Integer
An integer value.

RAW TYPE String
A string of UTF8 characters.

RAW TYPE UUID
A UUID/GUID, a 16-byte value often displayed as 32 hexadecimal digits in the
format 00000000-0000-0000-0000-000000000000.

RAW TYPE List<value>
A list of values.

RAW TYPE Map<key,value>
A map of key to value.

CORE TYPE BranchType : Enum
Possible types of a branch.
    Boolean
A boolean true/false values.
    Integer
An integer value; sizes[0] is the number of bits (8, 16, 32, 64), sizes[1] is 0
for unsigned, 1 for signed.
    Float
A floating-point number; sizes[0] is the number of bits (32, 64).
    Decimal
A decimal number; sizes[0] is the maximum number of digits before the decimal
point, sizes[1] is the maximum number of digits after.
    String
A string of UTF8 charcters; sizes[0] is the maximum length in characters.
    Uuid
A UUID.
    List
An ordered list of values; branches[0] is the type of the values.
    Set
An unordered set of values; branches[0] is the type of the values.
    Map
A map of values; branches[0] is the type of the keys, branches[1] is the type
of the values.
    Tree
A tree of sub-values, as specified by branches[].

CORE TYPE Node
A node in a Myaope schema.
    uuid        : UUID
A universally unique identifier for the node.
    id          : String
An ID which must be unique amongst sibling nodes.
    name        : String
A plain-text name for the node.
    description : String
A free-text description of the node.

CORE TYPE Branch : Node
Details of a branch in a Mayope schema.
    type     : BranchType
The type of the branch's value.
    sizes    ? List<Integer>
Additional size specifiers for the type if needed.
    branches ? List<Branch>
The child branch type(s) if not a single-valued type.

CORE TYPE Tree : Node
Details of a tree.
    branches ? List<Branch>
The branches within this tree; empty if none, null if this is a stub record.

CORE TYPE Forest : Node
Details of a forest.
    forests ? List<Forest>
The children of this forest; empty if none, null if this is a stub record.
    trees   ? List<Tree>
The trees within this forest; empty if none, null if this is a stub record.

TYPE ErrorType : Enum
A type of error.
    Unknown
An unknown error.
    Validation
The input was invalid.
    Authentication
An authentication failure (i.e. invalid credentials, etc).
    Authorization
An authorization failure (i.e. user does not have access).

MESSAGE Message
A message.

MESSAGE Request : Message
A request message (client -> server).

MESSAGE Response : Message
A response message (server -> client).

MESSAGE ErrorResponse : Response
An error response. This may be returned as an alternative response to any
action, normally with an error indication in the underlying protocol (e.g. a
4xx or 5xx HTTP status code).
    error   : ErrorType
A code giving the type of error which occurred.
    message ? String
A more detailed, human-readable error message.
    details ? Map<String,String>
Additional details of the error.

MESSAGE AuthenticatedRequest : Request
A request including an authentication token.
    token : UUID
A token authenticating the user.

MESSAGE SuccessResponse : Response
A geneic boolean success/failure response.
    success : Boolean
True if the operation succeeded, false otherwise.

MESSAGE LoginRequest : Request
A login request, including username/password credentials.
    username : String
The username to log in with.
    password : String
The user's password.

MESSAGE LoginResponse : Response
A successful login response including the authentication token to use in future
authenticated requests.
    token : UUID
An authentication token to use in future requests.

MESSAGE LogoutRequest : AuthenticatedRequest
A request to log out, expiring the given token.

MESSAGE LogoutResponse : SuccessResponse
A logout confirmation response.

MESSAGE ListForestsRequest : AuthenticatedRequest
A request for a list of forests.
    parent ? UUID
The UUID of a forest to list the children of, or null for the root forests.

MESSAGE ListForestsResponse
A response containing a list of forests.
    parent  ? UUID
The UUID of the parent forest, or null if the root forests.
    forests : List<Forest>
The forests found, empty if none.

MESSAGE ListTreesRequest : AuthenticatedRequest
A request for a list of trees.
    forest : UUID
The UUID of the forest to list the trees in.

MESSAGE ListTreesResponse
A response containing a list of trees.
    forest : UUID
The UUID of the forest.
    trees  : List<Tree>
The trees in the forest, empty if none.

MESSAGE ListBranchesRequest : AuthenticatedRequest
A request for a list of branches.
    tree : UUID
The UUID of the tree to list the branches in.

MESSAGE ListBranchesResponse
A response containing a list of branches.
    tree     : UUID
The UUID of the tree.
    branches : List<Branch>
The branches in the tree, empty if none.

ACTION Login LoginRequest LoginResponse
The login action.

ACTION Logout LogoutRequest LogoutResponse
The logout action.

ACTION ListForests ListForestsRequest ListForestsResponse
The forest list action.

ACTION ListTrees ListTreesRequest ListTreesResponse
The tree list action.

ACTION ListBranches ListBranchesRequest ListBranchesResponse
The branch list action.
